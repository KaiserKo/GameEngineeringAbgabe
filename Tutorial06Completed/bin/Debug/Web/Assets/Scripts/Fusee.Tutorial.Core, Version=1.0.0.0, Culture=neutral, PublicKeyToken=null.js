/* Generated by JSIL v0.8.2 build 17617. See http://jsil.org/ for more information. */ 
'use strict';
var $asm09 = JSIL.DeclareAssembly("Fusee.Tutorial.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null");

JSIL.DeclareNamespace("Fusee");
JSIL.DeclareNamespace("Fusee.Tutorial");
JSIL.DeclareNamespace("Fusee.Tutorial.Core");
/* class Fusee.Tutorial.Core.MapButtonEventArgs */ 

(function MapButtonEventArgs$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm14.System.Int32)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm04.Fusee.Engine.Core.GUI.GUIButtonEventArgs)) ();
  };


  function MapButtonEventArgs__ctor (i) {
    $T01().prototype._ctor.call(this);
    this.index = (i | 0);
  }; 

  JSIL.MakeType({
      BaseType: $asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButtonEventArgs"), 
      Name: "Fusee.Tutorial.Core.MapButtonEventArgs", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32), 
      MapButtonEventArgs__ctor
    );

    $.Field({Static:false, Public:true }, "index", $.Int32);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Tutorial.Core.Player */ 

(function Player$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm14.System.Int32)) ();
  };


  function Player_get_Money () {
    return $thisType.money;
  }; 

  function Player_get_VillageHealth () {
    return $thisType.villageHealth;
  }; 

  function Player_set_Money (value) {
    $thisType.money = (value | 0);
  }; 

  function Player_set_VillageHealth (value) {
    $thisType.villageHealth = (value | 0);
  }; 

  JSIL.MakeStaticClass("Fusee.Tutorial.Core.Player", true, [], function ($ib) {
    $ = $ib;

    $.Method({Static:true , Public:true }, "get_Money", 
      JSIL.MethodSignature.Return($.Int32), 
      Player_get_Money
    );

    $.Method({Static:true , Public:true }, "get_VillageHealth", 
      JSIL.MethodSignature.Return($.Int32), 
      Player_get_VillageHealth
    );

    $.Method({Static:true , Public:true }, "set_Money", 
      JSIL.MethodSignature.Action($.Int32), 
      Player_set_Money
    );

    $.Method({Static:true , Public:true }, "set_VillageHealth", 
      JSIL.MethodSignature.Action($.Int32), 
      Player_set_VillageHealth
    );

    $.Field({Static:true , Public:false}, "money", $.Int32, 1000);

    $.Field({Static:true , Public:false}, "villageHealth", $.Int32, 10);


    function Player__cctor () {
      $thisType.money = 1000;
      $thisType.villageHealth = 10;
    }; 

    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      Player__cctor
    );

    $.Property({Static:true , Public:true }, "Money", $.Int32);

    $.Property({Static:true , Public:true }, "VillageHealth", $.Int32);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Tutorial.Core.Renderer */ 

(function Renderer$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm04.Fusee.Engine.Core.RenderContext)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm14.System.Collections.Generic.Dictionary$b2.Of($asm07.Fusee.Serialization.MeshComponent, $asm04.Fusee.Engine.Core.Mesh))) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm0B.Fusee.Xene.CollapsingStateStack$b1.Of($asm06.Fusee.Math.Core.float4x4))) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm0B.Fusee.Xene.SceneVisitor)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm14.System.String)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm01.Fusee.Base.Core.AssetStorage)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm06.Fusee.Math.Core.float4x4)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm07.Fusee.Serialization.MeshComponent)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm04.Fusee.Engine.Core.Mesh)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm14.System.Boolean)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm07.Fusee.Serialization.MaterialComponent)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm07.Fusee.Serialization.TransformComponent)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm0B.Fusee.Xene.ContainerExtensions)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm14.TypeRef("System.Collections.Generic.Dictionary`2", [$asm07.TypeRef("Fusee.Serialization.MeshComponent"), $asm04.TypeRef("Fusee.Engine.Core.Mesh")]), null))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.MethodSignature($asm06.TypeRef("Fusee.Math.Core.float4x4"), [$asm06.TypeRef("Fusee.Math.Core.float4x4"), $asm06.TypeRef("Fusee.Math.Core.float4x4")]))) ();
  };


  function Renderer__ctor (rc) {
    this._meshes = $S00().Construct();
    this._model = new ($T02())(4);
    $T03().prototype._ctor.call(this);
    this.RC = rc;
    var vs = $T05().Get$b1($T04())("VertexShader.vert");
    var ps = $T05().Get$b1($T04())("PixelShader.frag");
    this.shader = (this.RC).CreateShader(vs, ps);
    (this.RC).SetShader(this.shader);
    this.AlbedoParam = (this.RC).GetShaderParam(this.shader, "albedo");
    this.ShininessParam = (this.RC).GetShaderParam(this.shader, "shininess");
    this.ShininessFactorParam = (this.RC).GetShaderParam(this.shader, "shininessFactor");
  }; 

  function Renderer_InitState () {
    (this._model).Clear();
    (this._model).set_Tos($T06().Identity.MemberwiseClone());
  }; 

  function Renderer_LookupMesh (mc) {
    var mesh = new JSIL.BoxedVariable(null);
    var flag = !(this._meshes).TryGetValue(mc, /* ref */ mesh);
    if (flag) {
      var expr_1C = new ($T08())();
      expr_1C.set_Vertices(mc.Vertices);
      expr_1C.set_Normals(mc.Normals);
      expr_1C.set_UVs(mc.UVs);
      expr_1C.set_Triangles(mc.Triangles);
      mesh.set(expr_1C);
      (this._meshes).set_Item(mc, mesh.get());
    }
    return mesh.get();
  }; 

  function Renderer_OnMaterial (material) {
    (this.RC).SetShaderParam3f(this.AlbedoParam, material.Diffuse.Color.MemberwiseClone());
    (this.RC).SetShaderParam1f(this.ShininessParam, material.Specular.Shininess);
  }; 

  function Renderer_OnMesh (mesh) {
    (this.RC).Render(this.LookupMesh(mesh));
  }; 

  function Renderer_OnTransform (xform) {
    this._model.Tos = $S01().CallStatic($T06(), "op_Multiply", null, this._model.Tos.MemberwiseClone(), $T0C().Matrix(xform).MemberwiseClone()).MemberwiseClone();
    (this.RC.ModelView = $S01().CallStatic($T06(), "op_Multiply", null, this.View.MemberwiseClone(), (this._model).get_Tos().MemberwiseClone()).MemberwiseClone());
  }; 

  function Renderer_PopState () {
    (this._model).Pop();
    (this.RC.ModelView = $S01().CallStatic($T06(), "op_Multiply", null, this.View.MemberwiseClone(), (this._model).get_Tos().MemberwiseClone()).MemberwiseClone());
  }; 

  function Renderer_PushState () {
    (this._model).Push();
  }; 

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("Fusee.Xene.SceneVisitor"), 
      Name: "Fusee.Tutorial.Core.Renderer", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm04.TypeRef("Fusee.Engine.Core.RenderContext")), 
      Renderer__ctor
    );

    $.Method({Static:false, Public:false, Virtual:true }, "InitState", 
      JSIL.MethodSignature.Void, 
      Renderer_InitState
    );

    $.Method({Static:false, Public:false}, "LookupMesh", 
      new JSIL.MethodSignature($asm04.TypeRef("Fusee.Engine.Core.Mesh"), [$asm07.TypeRef("Fusee.Serialization.MeshComponent")]), 
      Renderer_LookupMesh
    );

    $.Method({Static:false, Public:false}, "OnMaterial", 
      JSIL.MethodSignature.Action($asm07.TypeRef("Fusee.Serialization.MaterialComponent")), 
      Renderer_OnMaterial
    )
      .Attribute($asm0B.TypeRef("Fusee.Xene.VisitMethodAttribute"));

    $.Method({Static:false, Public:false}, "OnMesh", 
      JSIL.MethodSignature.Action($asm07.TypeRef("Fusee.Serialization.MeshComponent")), 
      Renderer_OnMesh
    )
      .Attribute($asm0B.TypeRef("Fusee.Xene.VisitMethodAttribute"));

    $.Method({Static:false, Public:false}, "OnTransform", 
      JSIL.MethodSignature.Action($asm07.TypeRef("Fusee.Serialization.TransformComponent")), 
      Renderer_OnTransform
    )
      .Attribute($asm0B.TypeRef("Fusee.Xene.VisitMethodAttribute"));

    $.Method({Static:false, Public:false, Virtual:true }, "PopState", 
      JSIL.MethodSignature.Void, 
      Renderer_PopState
    );

    $.Method({Static:false, Public:false, Virtual:true }, "PushState", 
      JSIL.MethodSignature.Void, 
      Renderer_PushState
    );

    $.Field({Static:false, Public:true }, "RC", $asm04.TypeRef("Fusee.Engine.Core.RenderContext"));

    $.Field({Static:false, Public:true }, "View", $asm06.TypeRef("Fusee.Math.Core.float4x4"));

    $.Field({Static:false, Public:false}, "_meshes", $asm14.TypeRef("System.Collections.Generic.Dictionary`2", [$asm07.TypeRef("Fusee.Serialization.MeshComponent"), $asm04.TypeRef("Fusee.Engine.Core.Mesh")]));

    $.Field({Static:false, Public:false}, "_model", $asm0B.TypeRef("Fusee.Xene.CollapsingStateStack`1", [$asm06.TypeRef("Fusee.Math.Core.float4x4")]));

    $.Field({Static:false, Public:true }, "AlbedoParam", $asm03.TypeRef("Fusee.Engine.Common.IShaderParam"));

    $.Field({Static:false, Public:true }, "ShininessParam", $asm03.TypeRef("Fusee.Engine.Common.IShaderParam"));

    $.Field({Static:false, Public:true }, "ShininessFactorParam", $asm03.TypeRef("Fusee.Engine.Common.IShaderParam"));

    $.Field({Static:false, Public:true }, "shader", $asm04.TypeRef("Fusee.Engine.Core.ShaderProgram"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Tutorial.Core.Tower */ 

(function Tower$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.Fusee.Serialization.SceneContainer)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.Fusee.Math.Core.float3)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm14.System.Int32)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm0B.Fusee.Xene.ContainerExtensions)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm07.Fusee.Serialization.SceneNodeContainer)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm11.System.Linq.Enumerable)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.MethodSignature("!!0", [$asm0D.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"])], ["TSource"]))) ();
  };


  function Tower__ctor (_model, _position, _speed, _range, _damage) {
    this.position = _position.MemberwiseClone();
    this.speed = (_speed | 0);
    this.range = (_range | 0);
    this.damage = (_damage | 0);
    this.model = _model;
    $T03().GetTransform($S00().CallStatic($T05(), "First$b1", [$asm07.Fusee.Serialization.SceneNodeContainer], this.model.Children), 0).Translation = this.position.MemberwiseClone();
  }; 

  function Tower_get_Model () {
    return this.model;
  }; 

  function Tower_set_Model (value) {
    this.model = value;
  }; 

  JSIL.MakeType({
      BaseType: $asm14.TypeRef("System.Object"), 
      Name: "Fusee.Tutorial.Core.Tower", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 5, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("Fusee.Serialization.SceneContainer"), $asm06.TypeRef("Fusee.Math.Core.float3"), 
          $.Int32, $.Int32, 
          $.Int32
        ]), 
      Tower__ctor
    );

    $.Method({Static:false, Public:true }, "get_Model", 
      JSIL.MethodSignature.Return($asm07.TypeRef("Fusee.Serialization.SceneContainer")), 
      Tower_get_Model
    );

    $.Method({Static:false, Public:true }, "set_Model", 
      JSIL.MethodSignature.Action($asm07.TypeRef("Fusee.Serialization.SceneContainer")), 
      Tower_set_Model
    );

    $.Field({Static:false, Public:false}, "model", $asm07.TypeRef("Fusee.Serialization.SceneContainer"));

    $.Field({Static:false, Public:false}, "position", $asm06.TypeRef("Fusee.Math.Core.float3"));

    $.Field({Static:false, Public:false}, "speed", $.Int32);

    $.Field({Static:false, Public:false}, "range", $.Int32);

    $.Field({Static:false, Public:false}, "damage", $.Int32);

    $.Property({Static:false, Public:true }, "Model", $asm07.TypeRef("Fusee.Serialization.SceneContainer"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Tutorial.Core.Tutorial */ 

(function Tutorial$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm04.Fusee.Engine.Core.RenderCanvas)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm04.Fusee.Engine.Core.GUI.GUIButton)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm04.Fusee.Engine.Core.GUI.GUIButtonEventArgs)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm14.System.Boolean)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm09.Fusee.Tutorial.Core.Player)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm09.Fusee.Tutorial.Core.Tutorial_$l$gc__DisplayClass61_0)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm14.System.String)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm14.System.Int32)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm06.Fusee.Math.Core.float3)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm0B.Fusee.Xene.ContainerExtensions)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm07.Fusee.Serialization.SceneNodeContainer)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm11.System.Linq.Enumerable)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm0B.Fusee.Xene.SceneFinderExtensions)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm14.System.Predicate$b1.Of($asm07.Fusee.Serialization.SceneNodeContainer))) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm14.System.Collections.Generic.Dictionary$b2.Of($asm14.System.Int32, $asm09.Fusee.Tutorial.Core.Tower))) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm09.Fusee.Tutorial.Core.Tower)) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm07.Fusee.Serialization.SceneContainer)) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm14.System.Type)) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize($asm08.Fusee.Serialization.Serializer)) ();
  };
  var $T13 = function () {
    return ($T13 = JSIL.Memoize($asm14.System.IO.MemoryStream)) ();
  };
  var $T14 = function () {
    return ($T14 = JSIL.Memoize($asm0E.ProtoBuf.Meta.TypeModel)) ();
  };
  var $T15 = function () {
    return ($T15 = JSIL.Memoize($asm14.System.IO.Stream)) ();
  };
  var $T16 = function () {
    return ($T16 = JSIL.Memoize($asm14.System.Int64)) ();
  };
  var $T17 = function () {
    return ($T17 = JSIL.Memoize($asm14.System.Collections.Generic.List$b1.Of($asm09.Fusee.Tutorial.Core.Wuggy))) ();
  };
  var $T18 = function () {
    return ($T18 = JSIL.Memoize($asm01.Fusee.Base.Core.AssetStorage)) ();
  };
  var $T19 = function () {
    return ($T19 = JSIL.Memoize($asm06.Fusee.Math.Core.float4x4)) ();
  };
  var $T1A = function () {
    return ($T1A = JSIL.Memoize($asm09.Fusee.Tutorial.Core.Wuggy)) ();
  };
  var $T1B = function () {
    return ($T1B = JSIL.Memoize($asm09.Fusee.Tutorial.Core.Renderer)) ();
  };
  var $T1C = function () {
    return ($T1C = JSIL.Memoize($asm06.Fusee.Math.Core.float4)) ();
  };
  var $T1D = function () {
    return ($T1D = JSIL.Memoize($asm04.Fusee.Engine.Core.GUI.GUIHandler)) ();
  };
  var $T1E = function () {
    return ($T1E = JSIL.Memoize($asm01.Fusee.Base.Core.Font)) ();
  };
  var $T1F = function () {
    return ($T1F = JSIL.Memoize($asm04.Fusee.Engine.Core.FontMap)) ();
  };
  var $T20 = function () {
    return ($T20 = JSIL.Memoize($asm04.Fusee.Engine.Core.GUI.GUIText)) ();
  };
  var $T21 = function () {
    return ($T21 = JSIL.Memoize($asm04.Fusee.Engine.Core.GUI.GUIElement)) ();
  };
  var $T22 = function () {
    return ($T22 = JSIL.Memoize($asm04.Fusee.Engine.Core.GUI.GUIPanel)) ();
  };
  var $T23 = function () {
    return ($T23 = JSIL.Memoize($asm04.Fusee.Engine.Core.GUI.GUIButtonHandler)) ();
  };
  var $T24 = function () {
    return ($T24 = JSIL.Memoize($asm14.System.Collections.Generic.List$b1.Of($asm04.Fusee.Engine.Core.GUI.GUIButton))) ();
  };
  var $T25 = function () {
    return ($T25 = JSIL.Memoize($asm04.Fusee.Engine.Core.RenderContext)) ();
  };
  var $T26 = function () {
    return ($T26 = JSIL.Memoize($asm09.Fusee.Tutorial.Core.Tutorial_$l$gc__DisplayClass60_0)) ();
  };
  var $T27 = function () {
    return ($T27 = JSIL.Memoize($asm14.System.Predicate$b1.Of($asm04.Fusee.Engine.Core.GUI.GUIButton))) ();
  };
  var $T28 = function () {
    return ($T28 = JSIL.Memoize($asm03.Fusee.Engine.Common.CursorType)) ();
  };
  var $T29 = function () {
    return ($T29 = JSIL.Memoize($asm09.Fusee.Tutorial.Core.Tutorial_$l$gc__DisplayClass58_0)) ();
  };
  var $T2A = function () {
    return ($T2A = JSIL.Memoize($asm14.System.Single)) ();
  };
  var $T2B = function () {
    return ($T2B = JSIL.Memoize($asm03.Fusee.Engine.Common.ClearFlags)) ();
  };
  var $T2C = function () {
    return ($T2C = JSIL.Memoize($asm04.Fusee.Engine.Core.KeyboardDevice)) ();
  };
  var $T2D = function () {
    return ($T2D = JSIL.Memoize($asm04.Fusee.Engine.Core.Input)) ();
  };
  var $T2E = function () {
    return ($T2E = JSIL.Memoize($asm14.System.Math)) ();
  };
  var $T2F = function () {
    return ($T2F = JSIL.Memoize($asm04.Fusee.Engine.Core.Time)) ();
  };
  var $T30 = function () {
    return ($T30 = JSIL.Memoize($asm04.Fusee.Engine.Core.TouchDevice)) ();
  };
  var $T31 = function () {
    return ($T31 = JSIL.Memoize($asm06.Fusee.Math.Core.float2)) ();
  };
  var $T32 = function () {
    return ($T32 = JSIL.Memoize($asm04.Fusee.Engine.Core.MouseDevice)) ();
  };
  var $T33 = function () {
    return ($T33 = JSIL.Memoize($asm03.Fusee.Engine.Common.TouchPoints)) ();
  };
  var $T34 = function () {
    return ($T34 = JSIL.Memoize($asm06.Fusee.Math.Core.M)) ();
  };
  var $T35 = function () {
    return ($T35 = JSIL.Memoize($asm04.Fusee.Engine.Core.RenderStateSet)) ();
  };
  var $T36 = function () {
    return ($T36 = JSIL.Memoize($asm0B.Fusee.Xene.SceneVisitor)) ();
  };
  var $T37 = function () {
    return ($T37 = JSIL.Memoize($asm14.System.Collections.Generic.Dictionary$b2_ValueCollection_Enumerator.Of($asm14.System.Int32, $asm09.Fusee.Tutorial.Core.Tower))) ();
  };
  var $T38 = function () {
    return ($T38 = JSIL.Memoize($asm14.System.Collections.Generic.Dictionary$b2_ValueCollection.Of($asm14.System.Int32, $asm09.Fusee.Tutorial.Core.Tower))) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.MethodSignature("!!0", [$asm0D.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"])], ["TSource"]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.MethodSignature($asm14.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]), [$asm14.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]), $asm14.TypeRef("System.Predicate`1", [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")])]))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.MethodSignature($asm14.TypeRef("System.Boolean"), [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(new JSIL.ConstructorSignature($asm14.TypeRef("System.IO.MemoryStream"), null))) ();
  };
  var $S04 = function () {
    return ($S04 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm14.TypeRef("System.IO.Stream"), $asm14.TypeRef("System.Object")]))) ();
  };
  var $S05 = function () {
    return ($S05 = JSIL.Memoize(new JSIL.MethodSignature($asm14.TypeRef("System.Object"), [
        $asm14.TypeRef("System.IO.Stream"), $asm14.TypeRef("System.Object"), 
        $asm14.TypeRef("System.Type")
      ]))) ();
  };
  var $S06 = function () {
    return ($S06 = JSIL.Memoize(new JSIL.ConstructorSignature($asm14.TypeRef("System.Collections.Generic.Dictionary`2", [$asm14.TypeRef("System.Int32"), $asm09.TypeRef("Fusee.Tutorial.Core.Tower")]), null))) ();
  };
  var $S07 = function () {
    return ($S07 = JSIL.Memoize(new JSIL.ConstructorSignature($asm14.TypeRef("System.Collections.Generic.List`1", [$asm09.TypeRef("Fusee.Tutorial.Core.Wuggy")]), null))) ();
  };
  var $S08 = function () {
    return ($S08 = JSIL.Memoize(new JSIL.MethodSignature($asm06.TypeRef("Fusee.Math.Core.float4x4"), [$asm14.TypeRef("System.Single")]))) ();
  };
  var $S09 = function () {
    return ($S09 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm09.TypeRef("Fusee.Tutorial.Core.Wuggy")]))) ();
  };
  var $S0A = function () {
    return ($S0A = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("Fusee.Math.Core.float3"), [
        $asm14.TypeRef("System.Single"), $asm14.TypeRef("System.Single"), 
        $asm14.TypeRef("System.Single")
      ]))) ();
  };
  var $S0B = function () {
    return ($S0B = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("Fusee.Math.Core.float4"), [
        $asm14.TypeRef("System.Single"), $asm14.TypeRef("System.Single"), 
        $asm14.TypeRef("System.Single"), $asm14.TypeRef("System.Single")
      ]))) ();
  };
  var $S0C = function () {
    return ($S0C = JSIL.Memoize(new JSIL.ConstructorSignature($asm04.TypeRef("Fusee.Engine.Core.GUI.GUIHandler"), null))) ();
  };
  var $S0D = function () {
    return ($S0D = JSIL.Memoize(new JSIL.ConstructorSignature($asm04.TypeRef("Fusee.Engine.Core.GUI.GUIText"), [
        $asm14.TypeRef("System.String"), $asm04.TypeRef("Fusee.Engine.Core.FontMap"), 
        $asm14.TypeRef("System.Int32"), $asm14.TypeRef("System.Int32")
      ]))) ();
  };
  var $S0E = function () {
    return ($S0E = JSIL.Memoize(JSIL.MethodSignature.Action($asm04.TypeRef("Fusee.Engine.Core.GUI.GUIElement")))) ();
  };
  var $S0F = function () {
    return ($S0F = JSIL.Memoize(new JSIL.ConstructorSignature($asm04.TypeRef("Fusee.Engine.Core.GUI.GUIPanel"), [
        $asm14.TypeRef("System.String"), $asm04.TypeRef("Fusee.Engine.Core.FontMap"), 
        $asm14.TypeRef("System.Int32"), $asm14.TypeRef("System.Int32"), 
        $asm14.TypeRef("System.Int32"), $asm14.TypeRef("System.Int32")
      ]))) ();
  };
  var $S10 = function () {
    return ($S10 = JSIL.Memoize(new JSIL.ConstructorSignature($asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButton"), [
        $asm14.TypeRef("System.String"), $asm04.TypeRef("Fusee.Engine.Core.FontMap"), 
        $asm14.TypeRef("System.Int32"), $asm14.TypeRef("System.Int32"), 
        $asm14.TypeRef("System.Int32"), $asm14.TypeRef("System.Int32")
      ]))) ();
  };
  var $S11 = function () {
    return ($S11 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButton"), $asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButtonEventArgs")]))) ();
  };
  var $S12 = function () {
    return ($S12 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButton"), $asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButtonEventArgs")]))) ();
  };
  var $S13 = function () {
    return ($S13 = JSIL.Memoize(new JSIL.ConstructorSignature($asm14.TypeRef("System.Collections.Generic.List`1", [$asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButton")]), null))) ();
  };
  var $S14 = function () {
    return ($S14 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButton")]))) ();
  };
  var $S15 = function () {
    return ($S15 = JSIL.Memoize(new JSIL.ConstructorSignature($asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButton"), [
        $asm14.TypeRef("System.Int32"), $asm14.TypeRef("System.Int32"), 
        $asm14.TypeRef("System.Int32"), $asm14.TypeRef("System.Int32")
      ]))) ();
  };
  var $S16 = function () {
    return ($S16 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButton"), $asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButtonEventArgs")]))) ();
  };
  var $S17 = function () {
    return ($S17 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButton"), $asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButtonEventArgs")]))) ();
  };
  var $S18 = function () {
    return ($S18 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButton"), $asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButtonEventArgs")]))) ();
  };
  var $S19 = function () {
    return ($S19 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButton"), $asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButtonEventArgs")]))) ();
  };
  var $S1A = function () {
    return ($S1A = JSIL.Memoize(new JSIL.MethodSignature($asm14.TypeRef("System.Boolean"), [$asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButton")]))) ();
  };
  var $S1B = function () {
    return ($S1B = JSIL.Memoize(new JSIL.MethodSignature($asm14.TypeRef("System.Boolean"), [$asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButton")]))) ();
  };
  var $S1C = function () {
    return ($S1C = JSIL.Memoize(new JSIL.MethodSignature($asm14.TypeRef("System.Boolean"), [$asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButton")]))) ();
  };
  var $S1D = function () {
    return ($S1D = JSIL.Memoize(new JSIL.MethodSignature($asm14.TypeRef("System.Boolean"), [$asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButton")]))) ();
  };
  var $S1E = function () {
    return ($S1E = JSIL.Memoize(new JSIL.MethodSignature($asm06.TypeRef("Fusee.Math.Core.float2"), [$asm06.TypeRef("Fusee.Math.Core.float2"), $asm14.TypeRef("System.Single")]))) ();
  };
  var $S1F = function () {
    return ($S1F = JSIL.Memoize(new JSIL.MethodSignature($asm14.TypeRef("System.Single"), [$asm14.TypeRef("System.Single")]))) ();
  };
  var $S20 = function () {
    return ($S20 = JSIL.Memoize(new JSIL.MethodSignature($asm14.TypeRef("System.Single"), [
        $asm14.TypeRef("System.Single"), $asm14.TypeRef("System.Single"), 
        $asm14.TypeRef("System.Single")
      ]))) ();
  };
  var $S21 = function () {
    return ($S21 = JSIL.Memoize(new JSIL.MethodSignature($asm06.TypeRef("Fusee.Math.Core.float4x4"), [$asm06.TypeRef("Fusee.Math.Core.float4x4"), $asm06.TypeRef("Fusee.Math.Core.float4x4")]))) ();
  };
  var $S22 = function () {
    return ($S22 = JSIL.Memoize(JSIL.MethodSignature.Action($asm14.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")])))) ();
  };


  function Tutorial__ctor () {
    $T00().prototype._ctor.call(this);
  }; 

  function Tutorial_buyTower (sender, mea) {
    var flag = !((($T04().get_Money() | 0) < (this.towerCosts | 0)) || 
      !this.isTowerSelected) && 
    !this.isUgradeMode;
    if (flag) {
      var $closure0 = new ($T05())();
      if ((this.currentSelectedTower | 0) === 0) {
        $closure0.$name = "W\xfcrfel";
      } else {
        $closure0.$name = (JSIL.ConcatString("W\xfcrfel.", (this.currentSelectedTower).toString()));
      }
      var translation = $T09().GetTransform($S00().CallStatic($T0B(), "First$b1", [$asm07.Fusee.Serialization.SceneNodeContainer], $S01().CallStatic($T0C(), "FindNodes", null, this._scene.Children, $T0D().New($closure0, null, new JSIL.MethodPointerInfo($asm09.Fusee.Tutorial.Core.Tutorial_$l$gc__DisplayClass61_0, "$lbuyTower$gb__0", $S02(), false, false)))), 0).Translation.MemberwiseClone();
      translation.y = +translation.y + 100;
      (this.listTowers).Add(this.currentSelectedTower, new ($T0F())($thisType.DeepCopy$b1($T10())(this._tower), translation.MemberwiseClone(), 0, 0, 0));
      $T04().set_Money(((($T04().get_Money() | 0) - (this.towerCosts | 0)) | 0));
      this.isUgradeMode = true;
    }
  }; 

  function Tutorial_DeepCopy$b1 (T, source) {
    var serializer = new ($T12())();
    var memoryStream = $S03().Construct();
    $S04().CallVirtual("Serialize", null, serializer, memoryStream, JSIL.CloneParameter(T, source));
    memoryStream.set_Position($T16().Create(0, 0, 0));
    return T.$As($S05().CallVirtual("Deserialize", null, serializer, memoryStream, null, T));
  }; 

  function Tutorial_Init () {
    var $temp00;
    this.set_Width(1295);
    this.set_Height(760);
    this.listTowers = $S06().Construct();
    this.listWuggys = $S07().Construct();
    this.isTowerSelected = false;
    this.isUgradeMode = false;
    this.towerCosts = 100;
    this._scene = $T18().Get$b1($T10())("TDMAPinWuggyFINAL.fus");
    this._tower = $T18().Get$b1($T10())("TowerRed.fus");
    this._wuggy = $T18().Get$b1($T10())("WuggyFromLand.fus");
    this._sceneScale = $S08().CallStatic($T19(), "CreateScale", null, 0.04).MemberwiseClone();
    $S09().CallVirtual("Add", null, this.listWuggys, new ($T1A())($thisType.DeepCopy$b1($T10())(this._wuggy), $S0A().Construct(0, 0, 750), 8, $S0A().Construct(0.2, 0.9, 0.2), 0, 1, 100));
    this._renderer = new ($T1B())(this.RenderCanvas$RC$value);
    this.redColor = $S0B().Construct(1, 0, 0.2, 1);
    this.greenColor = $S0B().Construct(0.4, 1, 0, 1);
    this.blueColor = $S0B().Construct(0, 0.4, 1, 1);
    this.yellowColor = $S0B().Construct(1, 0.9, 0, 1);
    this.whiteColor = $S0B().Construct(1, 1, 1, 1);
    this.cyanColor = $S0B().Construct(0, 0.7, 0.7, 1);
    this.guiHandler = $S0C().Construct();
    (this.guiHandler).AttachToContext(this.RenderCanvas$RC$value);
    this.fontCabin = $T18().Get$b1($T1E())("AmericanCaptain.ttf");
    (this.fontCabin).set_UseKerning(true);
    this._guiCabinBlack = new ($T1F())(this.fontCabin, 18, null);
    this._guiCabinBlackBig = new ($T1F())(this.fontCabin, 25, null);
    this.guiText = $S0D().Construct("Defend!", this._guiCabinBlack, 310, 35);
    (this.guiText.TextColor = $S0B().Construct(0.05, 0.25, 0.15, 0.8));
    $S0E().CallVirtual("Add", null, this.guiHandler, this.guiText);
    this.guiPanelStatus = $S0F().Construct("Defend the Village", this._guiCabinBlack, 880, 0, 400, 120);
    (this.guiPanelStatus.PanelColor = $S0B().Construct(0, 0.38, 0.69, 1));
    $S0E().CallVirtual("Add", null, this.guiHandler, this.guiPanelStatus);
    this.healthText = $S0D().Construct("Health Village: 10", this._guiCabinBlackBig, 900, 60);
    (this.healthText.TextColor = $S0B().Construct(0.9, 0, 0, 1));
    $S0E().CallVirtual("Add", null, this.guiHandler, this.healthText);
    this.moneyText = $S0D().Construct("Money: 1000", this._guiCabinBlackBig, 900, 90);
    (this.moneyText.TextColor = $S0B().Construct(0, 0.9, 0.1, 1));
    $S0E().CallVirtual("Add", null, this.guiHandler, this.moneyText);
    this.guiPanelShop = $S0F().Construct("Shop", this._guiCabinBlack, 880, 370, 400, 250);
    (this.guiPanelShop.PanelColor = $S0B().Construct(0, 0.38, 0.69, 1));
    $S0E().CallVirtual("Add", null, this.guiHandler, this.guiPanelShop);
    this.guiPanelWaves = $S0F().Construct("Wave", this._guiCabinBlack, 880, 620, 400, 100);
    (this.guiPanelWaves.PanelColor = $S0B().Construct(0, 0.38, 0.69, 1));
    $S0E().CallVirtual("Add", null, this.guiHandler, this.guiPanelWaves);
    this.startButton = $S10().Construct("Start Wave", this._guiCabinBlack, 900, 650, 360, 50);
    (this.startButton).add_OnGUIButtonEnter($T23().New(this, null, new JSIL.MethodPointerInfo($thisType, "shopButtonEnter", $S11(), false, false)));
    (this.startButton).add_OnGUIButtonLeave($T23().New(this, null, new JSIL.MethodPointerInfo($thisType, "shopButtonLeave", $S12(), false, false)));
    $S0E().CallVirtual("Add", null, this.guiHandler, this.startButton);
    this.mapButtons = $S13().Construct();

    for (var i = 0; i < 146; i = ((i + 1) | 0)) {
      $S14().CallVirtual("Add", null, this.mapButtons, $S15().Construct(500, 500, 8, 8));
      ((this.mapButtons).get_Item(i).ButtonColor = this.blueColor.MemberwiseClone());
      ((this.mapButtons).get_Item(i)).set_BorderWidth(0);
      ((this.mapButtons).get_Item(i)).add_OnGUIButtonDown($T23().New(this, null, new JSIL.MethodPointerInfo($thisType, "mapOnGUIButtonDown", $S16(), false, false)));
      ((this.mapButtons).get_Item(i)).add_OnGUIButtonEnter($T23().New(this, null, new JSIL.MethodPointerInfo($thisType, "mapOnGUIButtonEnter", $S17(), false, false)));
      ((this.mapButtons).get_Item(i)).add_OnGUIButtonLeave($T23().New(this, null, new JSIL.MethodPointerInfo($thisType, "mapOnGUIButtonLeave", $S18(), false, false)));
    }
    this.setButtonPosition((this.mapButtons).get_Item(0), 945, 219);
    this.setButtonPosition((this.mapButtons).get_Item(1), 932, 219);
    this.setButtonPosition((this.mapButtons).get_Item(2), 957, 219);
    this.setButtonPosition((this.mapButtons).get_Item(3), 969, 219);
    this.setButtonPosition((this.mapButtons).get_Item(4), 981, 219);
    this.setButtonPosition((this.mapButtons).get_Item(5), 981, 197);
    this.setButtonPosition((this.mapButtons).get_Item(6), 967, 197);
    this.setButtonPosition((this.mapButtons).get_Item(7), 953, 197);
    this.setButtonPosition((this.mapButtons).get_Item(8), 939, 197);
    this.setButtonPosition((this.mapButtons).get_Item(9), 979, 290);
    this.setButtonPosition((this.mapButtons).get_Item(10), 967, 290);
    this.setButtonPosition((this.mapButtons).get_Item(11), 955, 290);
    this.setButtonPosition((this.mapButtons).get_Item(12), 942, 290);
    this.setButtonPosition((this.mapButtons).get_Item(13), 942, 314);
    this.setButtonPosition((this.mapButtons).get_Item(14), 955, 314);
    this.setButtonPosition((this.mapButtons).get_Item(15), 967, 314);
    this.setButtonPosition((this.mapButtons).get_Item(16), 979, 314);
    this.setButtonPosition((this.mapButtons).get_Item(17), 1044, 314);
    this.setButtonPosition((this.mapButtons).get_Item(18), 1032, 314);
    this.setButtonPosition((this.mapButtons).get_Item(19), 1020, 314);
    this.setButtonPosition((this.mapButtons).get_Item(20), 1008, 314);
    this.setButtonPosition((this.mapButtons).get_Item(21), 1057, 314);
    this.setButtonPosition((this.mapButtons).get_Item(22), 1069, 314);
    this.setButtonPosition((this.mapButtons).get_Item(23), 1081, 314);
    this.setButtonPosition((this.mapButtons).get_Item(24), 1175, 282);
    this.setButtonPosition((this.mapButtons).get_Item(25), 1163, 282);
    this.setButtonPosition((this.mapButtons).get_Item(26), 1151, 282);
    this.setButtonPosition((this.mapButtons).get_Item(27), 1103, 282);
    this.setButtonPosition((this.mapButtons).get_Item(28), 1115, 282);
    this.setButtonPosition((this.mapButtons).get_Item(29), 1127, 282);
    this.setButtonPosition((this.mapButtons).get_Item(30), 1139, 282);
    this.setButtonPosition((this.mapButtons).get_Item(31), 1149, 307);
    this.setButtonPosition((this.mapButtons).get_Item(32), 1137, 307);
    this.setButtonPosition((this.mapButtons).get_Item(33), 1125, 307);
    this.setButtonPosition((this.mapButtons).get_Item(34), 1113, 307);
    this.setButtonPosition((this.mapButtons).get_Item(35), 1161, 307);
    this.setButtonPosition((this.mapButtons).get_Item(36), 1173, 307);
    this.setButtonPosition((this.mapButtons).get_Item(37), 1185, 307);
    this.setButtonPosition((this.mapButtons).get_Item(38), 1081, 337);
    this.setButtonPosition((this.mapButtons).get_Item(39), 1069, 337);
    this.setButtonPosition((this.mapButtons).get_Item(40), 1057, 337);
    this.setButtonPosition((this.mapButtons).get_Item(41), 1008, 337);
    this.setButtonPosition((this.mapButtons).get_Item(42), 1020, 337);
    this.setButtonPosition((this.mapButtons).get_Item(43), 1032, 337);
    this.setButtonPosition((this.mapButtons).get_Item(44), 1044, 337);
    this.setButtonPosition((this.mapButtons).get_Item(45), 1059, 259);
    this.setButtonPosition((this.mapButtons).get_Item(46), 1047, 259);
    this.setButtonPosition((this.mapButtons).get_Item(47), 1035, 259);
    this.setButtonPosition((this.mapButtons).get_Item(48), 1023, 259);
    this.setButtonPosition((this.mapButtons).get_Item(49), 1071, 259);
    this.setButtonPosition((this.mapButtons).get_Item(50), 1091, 242);
    this.setButtonPosition((this.mapButtons).get_Item(51), 1103, 242);
    this.setButtonPosition((this.mapButtons).get_Item(52), 1127, 242);
    this.setButtonPosition((this.mapButtons).get_Item(53), 1115, 242);
    this.setButtonPosition((this.mapButtons).get_Item(54), 1167, 222);
    this.setButtonPosition((this.mapButtons).get_Item(55), 1179, 222);
    this.setButtonPosition((this.mapButtons).get_Item(56), 1155, 222);
    this.setButtonPosition((this.mapButtons).get_Item(57), 1143, 222);
    this.setButtonPosition((this.mapButtons).get_Item(58), 1143, 194);
    this.setButtonPosition((this.mapButtons).get_Item(59), 1155, 194);
    this.setButtonPosition((this.mapButtons).get_Item(60), 1182, 194);
    this.setButtonPosition((this.mapButtons).get_Item(61), 1168, 194);
    this.setButtonPosition((this.mapButtons).get_Item(62), 1102, 216);
    this.setButtonPosition((this.mapButtons).get_Item(63), 1114, 216);
    this.setButtonPosition((this.mapButtons).get_Item(64), 1090, 216);
    this.setButtonPosition((this.mapButtons).get_Item(65), 1078, 216);
    this.setButtonPosition((this.mapButtons).get_Item(66), 1023, 236);
    this.setButtonPosition((this.mapButtons).get_Item(67), 1035, 236);
    this.setButtonPosition((this.mapButtons).get_Item(68), 1047, 236);
    this.setButtonPosition((this.mapButtons).get_Item(69), 1059, 236);
    this.setButtonPosition((this.mapButtons).get_Item(70), 1008, 301);
    this.setButtonPosition((this.mapButtons).get_Item(71), 1008, 287);
    this.setButtonPosition((this.mapButtons).get_Item(72), 999, 243);
    this.setButtonPosition((this.mapButtons).get_Item(73), 999, 258);
    this.setButtonPosition((this.mapButtons).get_Item(74), 1058, 183);
    this.setButtonPosition((this.mapButtons).get_Item(75), 1046, 183);
    this.setButtonPosition((this.mapButtons).get_Item(76), 1034, 183);
    this.setButtonPosition((this.mapButtons).get_Item(77), 1022, 183);
    this.setButtonPosition((this.mapButtons).get_Item(78), 1070, 183);
    this.setButtonPosition((this.mapButtons).get_Item(79), 1082, 183);
    this.setButtonPosition((this.mapButtons).get_Item(80), 1147, 176);
    this.setButtonPosition((this.mapButtons).get_Item(81), 1070, 157);
    this.setButtonPosition((this.mapButtons).get_Item(82), 1022, 157);
    this.setButtonPosition((this.mapButtons).get_Item(83), 1034, 157);
    this.setButtonPosition((this.mapButtons).get_Item(84), 1046, 157);
    this.setButtonPosition((this.mapButtons).get_Item(85), 1058, 157);
    this.setButtonPosition((this.mapButtons).get_Item(86), 1135, 176);
    this.setButtonPosition((this.mapButtons).get_Item(87), 1099, 176);
    this.setButtonPosition((this.mapButtons).get_Item(88), 1111, 176);
    this.setButtonPosition((this.mapButtons).get_Item(89), 1123, 176);
    this.setButtonPosition((this.mapButtons).get_Item(90), 1113, 151);
    this.setButtonPosition((this.mapButtons).get_Item(91), 1101, 151);
    this.setButtonPosition((this.mapButtons).get_Item(92), 1089, 151);
    this.setButtonPosition((this.mapButtons).get_Item(93), 1125, 151);
    this.setButtonPosition((this.mapButtons).get_Item(94), 1137, 151);
    this.setButtonPosition((this.mapButtons).get_Item(95), 1206, 146);
    this.setButtonPosition((this.mapButtons).get_Item(96), 1194, 146);
    this.setButtonPosition((this.mapButtons).get_Item(97), 1158, 146);
    this.setButtonPosition((this.mapButtons).get_Item(98), 1170, 146);
    this.setButtonPosition((this.mapButtons).get_Item(99), 1182, 146);
    this.setButtonPosition((this.mapButtons).get_Item(100), 1179, 237);
    this.setButtonPosition((this.mapButtons).get_Item(101), 1179, 252);
    this.setButtonPosition((this.mapButtons).get_Item(102), 1206, 252);
    this.setButtonPosition((this.mapButtons).get_Item(103), 1206, 237);
    this.setButtonPosition((this.mapButtons).get_Item(104), 1206, 222);
    this.setButtonPosition((this.mapButtons).get_Item(105), 1200, 278);
    this.setButtonPosition((this.mapButtons).get_Item(106), 1200, 292);
    this.setButtonPosition((this.mapButtons).get_Item(107), 1195, 194);
    this.setButtonPosition((this.mapButtons).get_Item(108), 1182, 168);
    this.setButtonPosition((this.mapButtons).get_Item(109), 1252, 194);
    this.setButtonPosition((this.mapButtons).get_Item(110), 1264, 194);
    this.setButtonPosition((this.mapButtons).get_Item(111), 1240, 194);
    this.setButtonPosition((this.mapButtons).get_Item(112), 1228, 194);
    this.setButtonPosition((this.mapButtons).get_Item(113), 1228, 168);
    this.setButtonPosition((this.mapButtons).get_Item(114), 1240, 168);
    this.setButtonPosition((this.mapButtons).get_Item(115), 1252, 168);
    this.setButtonPosition((this.mapButtons).get_Item(116), 1264, 168);
    this.setButtonPosition((this.mapButtons).get_Item(117), 1170, 168);
    this.setButtonPosition((this.mapButtons).get_Item(118), 1194, 168);
    this.setButtonPosition((this.mapButtons).get_Item(119), 1158, 168);
    this.setButtonPosition((this.mapButtons).get_Item(120), 1023, 202);
    this.setButtonPosition((this.mapButtons).get_Item(121), 1023, 216);
    this.setButtonPosition((this.mapButtons).get_Item(122), 999, 194);
    this.setButtonPosition((this.mapButtons).get_Item(123), 999, 179);
    this.setButtonPosition((this.mapButtons).get_Item(124), 942, 276);
    this.setButtonPosition((this.mapButtons).get_Item(125), 942, 261);
    this.setButtonPosition((this.mapButtons).get_Item(126), 915, 209);
    this.setButtonPosition((this.mapButtons).get_Item(127), 915, 227);
    this.setButtonPosition((this.mapButtons).get_Item(128), 915, 245);
    this.setButtonPosition((this.mapButtons).get_Item(129), 915, 191);
    this.setButtonPosition((this.mapButtons).get_Item(130), 889, 191);
    this.setButtonPosition((this.mapButtons).get_Item(131), 889, 245);
    this.setButtonPosition((this.mapButtons).get_Item(132), 889, 227);
    this.setButtonPosition((this.mapButtons).get_Item(133), 889, 209);
    this.setButtonPosition((this.mapButtons).get_Item(134), 912, 276);
    this.setButtonPosition((this.mapButtons).get_Item(135), 912, 290);
    this.setButtonPosition((this.mapButtons).get_Item(136), 928, 314);
    this.setButtonPosition((this.mapButtons).get_Item(137), 912, 305);
    this.setButtonPosition((this.mapButtons).get_Item(138), 928, 245);
    this.setButtonPosition((this.mapButtons).get_Item(139), 915, 161);
    this.setButtonPosition((this.mapButtons).get_Item(140), 928, 161);
    this.setButtonPosition((this.mapButtons).get_Item(141), 901, 161);
    this.setButtonPosition((this.mapButtons).get_Item(142), 889, 174);
    this.setButtonPosition((this.mapButtons).get_Item(143), 939, 178);
    this.setButtonPosition((this.mapButtons).get_Item(144), 899, 276);
    this.setButtonPosition((this.mapButtons).get_Item(145), 886, 276);

    for (var a$0 = this.mapButtons._items, i$0 = 0, l$0 = (this.mapButtons._size | 0); i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current = a$0[i$0];
      $S0E().CallVirtual("Add", null, this.guiHandler, current);
    }
    this.guiHandlerTowers = $S0C().Construct();
    (this.guiHandlerTowers).AttachToContext(this.RenderCanvas$RC$value);
    this.buyButton = $S10().Construct("Buy Tower (100)", this._guiCabinBlack, 900, 400, 360, 50);
    (this.buyButton).add_OnGUIButtonDown($T23().New(this, null, new JSIL.MethodPointerInfo($thisType, "buyTower", $S19(), false, false)));
    (this.buyButton).add_OnGUIButtonEnter($T23().New(this, null, new JSIL.MethodPointerInfo($thisType, "shopButtonEnter", $S11(), false, false)));
    (this.buyButton).add_OnGUIButtonLeave($T23().New(this, null, new JSIL.MethodPointerInfo($thisType, "shopButtonLeave", $S12(), false, false)));
    $S0E().CallVirtual("Add", null, this.guiHandlerTowers, this.buyButton);
    this.guiHandlerTowersUpgrade = $S0C().Construct();
    (this.guiHandlerTowersUpgrade).AttachToContext(this.RenderCanvas$RC$value);
    this.speedUpgradeText = $S10().Construct("Shot Frequency: 1", this._guiCabinBlack, 900, 400, 180, 50);
    (this.speedUpgradeText.ButtonColor = $S0B().Construct(0, 0.38, 0.69, 1));
    (this.speedUpgradeText.TextColor = $S0B().Construct(1, 1, 1, 1));
    (this.speedUpgradeText).set_BorderWidth(0);
    $S0E().CallVirtual("Add", null, this.guiHandlerTowersUpgrade, this.speedUpgradeText);
    this.speedUpgradeButton = $S10().Construct("Speed Upgrade", this._guiCabinBlack, 1080, 400, 180, 50);
    (this.speedUpgradeButton).add_OnGUIButtonEnter($T23().New(this, null, new JSIL.MethodPointerInfo($thisType, "shopButtonEnter", $S11(), false, false)));
    (this.speedUpgradeButton).add_OnGUIButtonLeave($T23().New(this, null, new JSIL.MethodPointerInfo($thisType, "shopButtonLeave", $S12(), false, false)));
    $S0E().CallVirtual("Add", null, this.guiHandlerTowersUpgrade, this.speedUpgradeButton);
    this.rangeUpgradeText = $S10().Construct("Range: 1", this._guiCabinBlack, 900, 475, 180, 50);
    (this.rangeUpgradeText.ButtonColor = $S0B().Construct(0, 0.38, 0.69, 1));
    (this.rangeUpgradeText.TextColor = $S0B().Construct(1, 1, 1, 1));
    (this.rangeUpgradeText).set_BorderWidth(0);
    $S0E().CallVirtual("Add", null, this.guiHandlerTowersUpgrade, this.rangeUpgradeText);
    this.rangeUpgradeButton = $S10().Construct("Range Upgrade", this._guiCabinBlack, 1080, 475, 180, 50);
    (this.rangeUpgradeButton).add_OnGUIButtonEnter($T23().New(this, null, new JSIL.MethodPointerInfo($thisType, "shopButtonEnter", $S11(), false, false)));
    (this.rangeUpgradeButton).add_OnGUIButtonLeave($T23().New(this, null, new JSIL.MethodPointerInfo($thisType, "shopButtonLeave", $S12(), false, false)));
    $S0E().CallVirtual("Add", null, this.guiHandlerTowersUpgrade, this.rangeUpgradeButton);
    this.damageUpgradeText = $S10().Construct("Damage: 1", this._guiCabinBlack, 900, 550, 180, 50);
    (this.damageUpgradeText.ButtonColor = $S0B().Construct(0, 0.38, 0.69, 1));
    (this.damageUpgradeText.TextColor = $S0B().Construct(1, 1, 1, 1));
    (this.damageUpgradeText).set_BorderWidth(0);
    $S0E().CallVirtual("Add", null, this.guiHandlerTowersUpgrade, this.damageUpgradeText);
    this.damageUpgradeButton = $S10().Construct("Damage Upgrade", this._guiCabinBlack, 1080, 550, 180, 50);
    (this.damageUpgradeButton).add_OnGUIButtonEnter($T23().New(this, null, new JSIL.MethodPointerInfo($thisType, "shopButtonEnter", $S11(), false, false)));
    (this.damageUpgradeButton).add_OnGUIButtonLeave($T23().New(this, null, new JSIL.MethodPointerInfo($thisType, "shopButtonLeave", $S12(), false, false)));
    $S0E().CallVirtual("Add", null, this.guiHandlerTowersUpgrade, this.damageUpgradeButton);
    (this.RenderCanvas$RC$value.ClearColor = $S0B().Construct(1, 1, 1, 1));
  }; 

  function Tutorial_mapOnGUIButtonDown (sender, mea) {
    var $closure0 = new ($T26())();
    $closure0.sender = sender;
    var flag = this.isTowerSelected;
    if (flag) {
      var key = ($T24().prototype.FindIndex.call(this.mapButtons, $T27().New($closure0, null, new JSIL.MethodPointerInfo($asm09.Fusee.Tutorial.Core.Tutorial_$l$gc__DisplayClass60_0, "$lmapOnGUIButtonDown$gb__0", $S1A(), false, false))) | 0);
      var flag2 = (this.listTowers).ContainsKey(key);
      if (flag2) {
        ((this.mapButtons).get_Item(this.currentSelectedTower).ButtonColor = this.redColor.MemberwiseClone());
      } else {
        ((this.mapButtons).get_Item(this.currentSelectedTower).ButtonColor = this.blueColor.MemberwiseClone());
      }
    }
    var flag3 = ((this.currentSelectedTower | 0) === ($T24().prototype.FindIndex.call(this.mapButtons, $T27().New($closure0, null, new JSIL.MethodPointerInfo($asm09.Fusee.Tutorial.Core.Tutorial_$l$gc__DisplayClass60_0, "$lmapOnGUIButtonDown$gb__1", $S1B(), false, false))) | 0)) || 
    !this.isTowerSelected;
    if (flag3) {
      this.isTowerSelected = !this.isTowerSelected;
    }
    this.currentSelectedTower = ($T24().prototype.FindIndex.call(this.mapButtons, $T27().New($closure0, null, new JSIL.MethodPointerInfo($asm09.Fusee.Tutorial.Core.Tutorial_$l$gc__DisplayClass60_0, "$lmapOnGUIButtonDown$gb__2", $S1C(), false, false))) | 0);
    var flag4 = (this.listTowers).ContainsKey(this.currentSelectedTower);
    if (flag4) {
      this.isUgradeMode = true;
    } else {
      this.isUgradeMode = false;
    }
    ($closure0.sender.ButtonColor = this.yellowColor.MemberwiseClone());
  }; 

  function Tutorial_mapOnGUIButtonEnter (sender, mea) {
    (sender.ButtonColor = this.cyanColor.MemberwiseClone());
    this.SetCursor($T28().Hand);
  }; 

  function Tutorial_mapOnGUIButtonLeave (sender, mea) {
    var $closure0 = new ($T29())();
    $closure0.sender = sender;
    var num = ($T24().prototype.FindIndex.call(this.mapButtons, $T27().New($closure0, null, new JSIL.MethodPointerInfo($asm09.Fusee.Tutorial.Core.Tutorial_$l$gc__DisplayClass58_0, "$lmapOnGUIButtonLeave$gb__0", $S1D(), false, false))) | 0);
    var flag = (this.currentSelectedTower | 0) !== num;
    if (flag) {
      var flag2 = (this.listTowers).ContainsKey(num);
      if (flag2) {
        ($closure0.sender.ButtonColor = this.redColor.MemberwiseClone());
      } else {
        ($closure0.sender.ButtonColor = this.blueColor.MemberwiseClone());
      }
    }
    this.SetCursor($T28().Standard);
  }; 

  function Tutorial_NormRot (rot) {

    for (; +rot > 3.14159274; rot -= 6.28318548) {
    }

    for (; +rot < -3.14159274; rot += 6.28318548) {
    }
    return rot;
  }; 

  function Tutorial_RenderAFrame () {
    var $temp00, $temp01;
    (this.RenderCanvas$RC$value).Clear($T2B().$Flags("Color", "Depth"));
    var flag = (+$T2D().get_Keyboard().get_LeftRightAxis() !== 0) || 
    (+$T2D().get_Keyboard().get_UpDownAxis() !== 0);
    if (flag) {
      this._keys = true;
    }
    var num = Math.fround($T2E().Exp(-0.8 * +$T2F().get_DeltaTime()));
    var twoPoint = $T2D().get_Touch().get_TwoPoint();
    if (twoPoint) {
      if (!this._twoTouchRepeated) {
        this._twoTouchRepeated = true;
        $thisType._angleRollInit = +$T2D().get_Touch().get_TwoPointAngle() - +$thisType._angleRoll;
        $thisType._offsetInit = $T31().op_Subtraction($T2D().get_Touch().get_TwoPointMidPoint().MemberwiseClone(), $thisType._offset);
      }
      $thisType._zoomVel = +$T2D().get_Touch().get_TwoPointDistanceVel() * -0.01;
      $thisType._angleRoll = +$T2D().get_Touch().get_TwoPointAngle() - +$thisType._angleRollInit;
      $thisType._offset = $T31().op_Subtraction($T2D().get_Touch().get_TwoPointMidPoint().MemberwiseClone(), $thisType._offsetInit);
    } else {
      this._twoTouchRepeated = false;
      $thisType._zoomVel = +$T2D().get_Mouse().get_WheelVel() * -0.5;
      $thisType._angleRoll = +$thisType._angleRoll * (num * 0.8);
      $thisType._offset = $S1E().CallStatic($T31(), "op_Multiply", null, $thisType._offset.MemberwiseClone(), num * 0.8);
    }
    var leftButton = $T2D().get_Mouse().get_LeftButton();
    if (leftButton) {
      this._keys = false;
      $thisType._angleVelHorz = (-7 * +$T2D().get_Mouse().get_XVel()) * 2E-06;
      $thisType._angleVelVert = (-7 * +$T2D().get_Mouse().get_YVel()) * 2E-06;
    } else {
      var flag3 = $T2D().get_Touch().GetTouchActive($T33().Touchpoint_0) && 
      !$T2D().get_Touch().get_TwoPoint();
      if (flag3) {
        this._keys = false;
        var velocity = $T2D().get_Touch().GetVelocity($T33().Touchpoint_0);
        $thisType._angleVelHorz = (-7 * +velocity.x) * 2E-06;
        $thisType._angleVelVert = (-7 * +velocity.y) * 2E-06;
      } else {
        var keys = this._keys;
        if (keys) {
          $thisType._angleVelHorz = (-7 * +$T2D().get_Keyboard().get_LeftRightAxis()) * 0.002;
          $thisType._angleVelVert = (-7 * +$T2D().get_Keyboard().get_UpDownAxis()) * 0.002;
        } else {
          $thisType._angleVelHorz = +$thisType._angleVelHorz * num;
          $thisType._angleVelVert = +$thisType._angleVelVert * num;
        }
      }
    }
    $thisType._zoom = +$thisType._zoom + +$thisType._zoomVel;
    if (+$thisType._zoom < 80) {
      $thisType._zoom = 80;
    }
    if (+$thisType._zoom > 2000) {
      $thisType._zoom = 2000;
    }
    $thisType._angleHorz = +$thisType._angleHorz + +$thisType._angleVelHorz;
    $thisType._angleHorz = +$S1F().CallStatic($T34(), "MinAngle", null, $thisType._angleHorz);
    $thisType._angleVert = +$thisType._angleVert + +$thisType._angleVelVert;
    $thisType._angleVert = +$S20().CallStatic($T34(), "Clamp", null, $thisType._angleVert, -1.57079637, 1.57079637);
    $thisType._angleRoll = +$S1F().CallStatic($T34(), "MinAngle", null, $thisType._angleRoll);
    (this.RenderCanvas$RC$value).Viewport(0, 0, 1280, 720);
    var flag6 = this.isTowerSelected;
    if (flag6) {
      var flag7 = this.isUgradeMode;
      if (flag7) {
        (this.guiHandlerTowersUpgrade).RenderGUI();
      } else {
        (this.guiHandlerTowers).RenderGUI();
      }
    }
    (this.guiHandler).RenderGUI();
    var arg_379_0 = this.RenderCanvas$RC$value;
    var expr_369 = new ($T35())();
    expr_369.set_AlphaBlendEnable(false);
    expr_369.set_ZEnable(true);
    arg_379_0.SetRenderState(expr_369);
    var right = $S21().CallStatic($T19(), "op_Multiply", null, 
      $S21().CallStatic($T19(), "op_Multiply", null, 
        $T19().CreateRotationZ($thisType._angleRoll).MemberwiseClone(), 
        $T19().CreateRotationX($thisType._angleVert).MemberwiseClone()
      ).MemberwiseClone(), 
      $T19().CreateRotationY($thisType._angleHorz).MemberwiseClone()
    ).MemberwiseClone();
    var left = $T19().LookAt(
      0, 
      20, 
      -$thisType._zoom, 
      0, 
      0, 
      0, 
      0, 
      1, 
      0
    );
    this._renderer.View = $S21().CallStatic($T19(), "op_Multiply", null, $S21().CallStatic($T19(), "op_Multiply", null, left.MemberwiseClone(), right.MemberwiseClone()).MemberwiseClone(), this._sceneScale.MemberwiseClone()).MemberwiseClone();
    var left2 = $T19().CreateTranslation(
      +(((2 * +$thisType._offset.x) / +(this.get_Width()))), 
      +(((-2 * +$thisType._offset.y) / +(this.get_Height()))), 
      0
    ).MemberwiseClone();
    (this.RenderCanvas$RC$value.Projection = $S21().CallStatic($T19(), "op_Multiply", null, left2.MemberwiseClone(), this._projection.MemberwiseClone()).MemberwiseClone());
    (this.RenderCanvas$RC$value).Viewport(0, 0, 880, 720);
    (this.RenderCanvas$RC$value).SetShader(this._renderer.shader);
    $S22().CallVirtual("Traverse", null, this._renderer, this._scene.Children);
    var enumerator = ((this.listTowers).get_Values()).GetEnumerator();

    while ($T37().prototype.MoveNext.call(enumerator)) {
      var current = $T37().prototype.get_Current.call(enumerator);
      $S22().CallVirtual("Traverse", null, this._renderer, current.get_Model().Children);
    }

    for (var a$0 = this.listWuggys._items, i$0 = 0, l$0 = (this.listWuggys._size | 0); i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current2 = a$0[i$0];
      $S22().CallVirtual("Traverse", null, this._renderer, current2.get_Model().Children);
    }
    (this.RenderCanvas$RC$value.Projection = $T19().CreateOrthographic(12750, 6955, -1000000, 50000).MemberwiseClone());
    this._renderer.View = $S21().CallStatic($T19(), "op_Multiply", null, 
      $T19().CreateRotationX(-1.570796).MemberwiseClone(), 
      $T19().CreateTranslation(0, 0, -300).MemberwiseClone()
    ).MemberwiseClone();
    (this.RenderCanvas$RC$value).Viewport(885, 355, 390, 240);
    (this.RenderCanvas$RC$value).SetShader(this._renderer.shader);
    $S22().CallVirtual("Traverse", null, this._renderer, this._scene.Children);
    var enumerator3 = ((this.listTowers).get_Values()).GetEnumerator();

    while ($T37().prototype.MoveNext.call(enumerator3)) {
      var current3 = $T37().prototype.get_Current.call(enumerator3);
      $S22().CallVirtual("Traverse", null, this._renderer, current3.get_Model().Children);
    }

    for (var a$1 = this.listWuggys._items, i$1 = 0, l$1 = (this.listWuggys._size | 0); i$1 < l$1; ($temp01 = i$1, 
        i$1 = ((i$1 + 1) | 0), 
        $temp01)) {
      var current4 = a$1[i$1];
      $S22().CallVirtual("Traverse", null, this._renderer, current4.get_Model().Children);
    }
    this.updateStatusPanel();
    this.Present();
  }; 

  function Tutorial_Resize () {
    (this.RenderCanvas$RC$value).Viewport(
      0, 
      0, 
      this.get_Width(), 
      this.get_Height()
    );
    var aspect = +((+((this.get_Width() | 0) - 400) / +(this.get_Height())));
    this._projection = $T19().CreatePerspectiveFieldOfView(0.7853982, aspect, 1, 20000).MemberwiseClone();
  }; 

  function Tutorial_setButtonPosition (button, posX, posY) {
    button.set_PosX(posX);
    button.set_PosY(posY);
  }; 

  function Tutorial_shopButtonEnter (sender, mea) {
    (sender.ButtonColor = this.cyanColor.MemberwiseClone());
  }; 

  function Tutorial_shopButtonLeave (sender, mea) {
    (sender.ButtonColor = this.whiteColor.MemberwiseClone());
  }; 

  function Tutorial_updateStatusPanel () {
    (this.moneyText).set_Text(JSIL.ConcatString("Money: ", ($T04().get_Money()).toString()));
    (this.healthText).set_Text(JSIL.ConcatString("Health Village: ", ($T04().get_VillageHealth()).toString()));
  }; 

  JSIL.MakeType({
      BaseType: $asm04.TypeRef("Fusee.Engine.Core.RenderCanvas"), 
      Name: "Fusee.Tutorial.Core.Tutorial", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      Tutorial__ctor
    );

    $.Method({Static:false, Public:false}, "buyTower", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButton"), $asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButtonEventArgs")]), 
      Tutorial_buyTower
    );

    $.Method({Static:true , Public:true }, "DeepCopy", 
      new JSIL.MethodSignature("!!0", ["!!0"], ["T"]), 
      Tutorial_DeepCopy$b1
    );

    $.Method({Static:false, Public:true , Virtual:true }, "Init", 
      JSIL.MethodSignature.Void, 
      Tutorial_Init
    );

    $.Method({Static:false, Public:false}, "mapOnGUIButtonDown", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButton"), $asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButtonEventArgs")]), 
      Tutorial_mapOnGUIButtonDown
    );

    $.Method({Static:false, Public:false}, "mapOnGUIButtonEnter", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButton"), $asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButtonEventArgs")]), 
      Tutorial_mapOnGUIButtonEnter
    );

    $.Method({Static:false, Public:false}, "mapOnGUIButtonLeave", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButton"), $asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButtonEventArgs")]), 
      Tutorial_mapOnGUIButtonLeave
    );

    $.Method({Static:true , Public:true }, "NormRot", 
      new JSIL.MethodSignature($.Single, [$.Single]), 
      Tutorial_NormRot
    );

    $.Method({Static:false, Public:true , Virtual:true }, "RenderAFrame", 
      JSIL.MethodSignature.Void, 
      Tutorial_RenderAFrame
    );

    $.Method({Static:false, Public:true , Virtual:true }, "Resize", 
      JSIL.MethodSignature.Void, 
      Tutorial_Resize
    );

    $.Method({Static:false, Public:true }, "setButtonPosition", 
      new JSIL.MethodSignature(null, [
          $asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButton"), $.Int32, 
          $.Int32
        ]), 
      Tutorial_setButtonPosition
    );

    $.Method({Static:false, Public:false}, "shopButtonEnter", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButton"), $asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButtonEventArgs")]), 
      Tutorial_shopButtonEnter
    );

    $.Method({Static:false, Public:false}, "shopButtonLeave", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButton"), $asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButtonEventArgs")]), 
      Tutorial_shopButtonLeave
    );

    $.Method({Static:false, Public:false}, "updateStatusPanel", 
      JSIL.MethodSignature.Void, 
      Tutorial_updateStatusPanel
    );

    $.Field({Static:true , Public:false}, "_angleHorz", $.Single, 1.04719758);

    $.Field({Static:true , Public:false}, "_angleVert", $.Single, -0.2617994);

    $.Field({Static:true , Public:false}, "_angleVelHorz", $.Single);

    $.Field({Static:true , Public:false}, "_angleVelVert", $.Single);

    $.Field({Static:true , Public:false}, "_angleRoll", $.Single);

    $.Field({Static:true , Public:false}, "_angleRollInit", $.Single);

    $.Field({Static:true , Public:false}, "_zoomVel", $.Single);

    $.Field({Static:true , Public:false}, "_zoom", $.Single);

    $.Field({Static:true , Public:false}, "_offset", $asm06.TypeRef("Fusee.Math.Core.float2"));

    $.Field({Static:true , Public:false}, "_offsetInit", $asm06.TypeRef("Fusee.Math.Core.float2"));

    $.Constant({Static:true , Public:false}, "RotationSpeed", $.Single, 7);

    $.Constant({Static:true , Public:false}, "Damping", $.Single, 0.8);

    $.Field({Static:false, Public:false}, "_scene", $asm07.TypeRef("Fusee.Serialization.SceneContainer"));

    $.Field({Static:false, Public:false}, "_tower", $asm07.TypeRef("Fusee.Serialization.SceneContainer"));

    $.Field({Static:false, Public:false}, "_wuggy", $asm07.TypeRef("Fusee.Serialization.SceneContainer"));

    $.Field({Static:false, Public:false}, "_sceneScale", $asm06.TypeRef("Fusee.Math.Core.float4x4"));

    $.Field({Static:false, Public:false}, "_projection", $asm06.TypeRef("Fusee.Math.Core.float4x4"));

    $.Field({Static:false, Public:false}, "_twoTouchRepeated", $.Boolean);

    $.Field({Static:false, Public:false}, "_keys", $.Boolean);

    $.Field({Static:false, Public:false}, "_renderer", $asm09.TypeRef("Fusee.Tutorial.Core.Renderer"));

    $.Field({Static:false, Public:false}, "listTowers", $asm14.TypeRef("System.Collections.Generic.Dictionary`2", [$.Int32, $asm09.TypeRef("Fusee.Tutorial.Core.Tower")]));

    $.Field({Static:false, Public:false}, "listWuggys", $asm14.TypeRef("System.Collections.Generic.List`1", [$asm09.TypeRef("Fusee.Tutorial.Core.Wuggy")]));

    $.Field({Static:false, Public:false}, "isTowerSelected", $.Boolean);

    $.Field({Static:false, Public:false}, "isUgradeMode", $.Boolean);

    $.Field({Static:false, Public:false}, "currentSelectedTower", $.Int32);

    $.Field({Static:false, Public:false}, "towerCosts", $.Int32);

    $.Field({Static:false, Public:false}, "guiHandler", $asm04.TypeRef("Fusee.Engine.Core.GUI.GUIHandler"));

    $.Field({Static:false, Public:false}, "guiPanelStatus", $asm04.TypeRef("Fusee.Engine.Core.GUI.GUIPanel"));

    $.Field({Static:false, Public:false}, "moneyText", $asm04.TypeRef("Fusee.Engine.Core.GUI.GUIText"));

    $.Field({Static:false, Public:false}, "healthText", $asm04.TypeRef("Fusee.Engine.Core.GUI.GUIText"));

    $.Field({Static:false, Public:false}, "guiPanelShop", $asm04.TypeRef("Fusee.Engine.Core.GUI.GUIPanel"));

    $.Field({Static:false, Public:false}, "guiPanelWaves", $asm04.TypeRef("Fusee.Engine.Core.GUI.GUIPanel"));

    $.Field({Static:false, Public:false}, "startButton", $asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButton"));

    $.Field({Static:false, Public:false}, "fontCabin", $asm01.TypeRef("Fusee.Base.Core.Font"));

    $.Field({Static:false, Public:false}, "_guiCabinBlack", $asm04.TypeRef("Fusee.Engine.Core.FontMap"));

    $.Field({Static:false, Public:false}, "_guiCabinBlackBig", $asm04.TypeRef("Fusee.Engine.Core.FontMap"));

    $.Field({Static:false, Public:false}, "guiText", $asm04.TypeRef("Fusee.Engine.Core.GUI.GUIText"));

    $.Field({Static:false, Public:false}, "redColor", $asm06.TypeRef("Fusee.Math.Core.float4"));

    $.Field({Static:false, Public:false}, "greenColor", $asm06.TypeRef("Fusee.Math.Core.float4"));

    $.Field({Static:false, Public:false}, "blueColor", $asm06.TypeRef("Fusee.Math.Core.float4"));

    $.Field({Static:false, Public:false}, "yellowColor", $asm06.TypeRef("Fusee.Math.Core.float4"));

    $.Field({Static:false, Public:false}, "whiteColor", $asm06.TypeRef("Fusee.Math.Core.float4"));

    $.Field({Static:false, Public:false}, "cyanColor", $asm06.TypeRef("Fusee.Math.Core.float4"));

    $.Field({Static:false, Public:false}, "mapButtons", $asm14.TypeRef("System.Collections.Generic.List`1", [$asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButton")]));

    $.Field({Static:false, Public:false}, "guiHandlerTowers", $asm04.TypeRef("Fusee.Engine.Core.GUI.GUIHandler"));

    $.Field({Static:false, Public:false}, "buyButton", $asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButton"));

    $.Field({Static:false, Public:false}, "guiHandlerTowersUpgrade", $asm04.TypeRef("Fusee.Engine.Core.GUI.GUIHandler"));

    $.Field({Static:false, Public:false}, "speedUpgradeText", $asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButton"));

    $.Field({Static:false, Public:false}, "speedUpgradeButton", $asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButton"));

    $.Field({Static:false, Public:false}, "rangeUpgradeText", $asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButton"));

    $.Field({Static:false, Public:false}, "rangeUpgradeButton", $asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButton"));

    $.Field({Static:false, Public:false}, "damageUpgradeText", $asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButton"));

    $.Field({Static:false, Public:false}, "damageUpgradeButton", $asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButton"));


    function Tutorial__cctor () {
      $thisType._offset = new $asm06.Fusee.Math.Core.float2();
      $thisType._offsetInit = new $asm06.Fusee.Math.Core.float2();
      $thisType._angleHorz = 1.04719758;
      $thisType._angleVert = -0.2617994;
    }; 

    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      Tutorial__cctor
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm03.TypeRef("Fusee.Engine.Common.FuseeApplicationAttribute"));

})();

/* class Fusee.Tutorial.Core.Tutorial+<>c__DisplayClass58_0 */ 

(function $l$gc__DisplayClass58_0$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm04.Fusee.Engine.Core.GUI.GUIButton)) ();
  };


  function $l$gc__DisplayClass58_0__ctor () {
  }; 

  function $l$gc__DisplayClass58_0_$lmapOnGUIButtonLeave$gb__0 (a) {
    return (a === this.sender);
  }; 

  JSIL.MakeType({
      BaseType: $asm14.TypeRef("System.Object"), 
      Name: "Fusee.Tutorial.Core.Tutorial+<>c__DisplayClass58_0", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      $l$gc__DisplayClass58_0__ctor
    );

    $.Method({Static:false, Public:false}, "$lmapOnGUIButtonLeave$gb__0", 
      new JSIL.MethodSignature($.Boolean, [$asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButton")]), 
      $l$gc__DisplayClass58_0_$lmapOnGUIButtonLeave$gb__0
    );

    $.Field({Static:false, Public:true }, "sender", $asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButton"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm14.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class Fusee.Tutorial.Core.Tutorial+<>c__DisplayClass60_0 */ 

(function $l$gc__DisplayClass60_0$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm04.Fusee.Engine.Core.GUI.GUIButton)) ();
  };


  function $l$gc__DisplayClass60_0__ctor () {
  }; 

  function $l$gc__DisplayClass60_0_$lmapOnGUIButtonDown$gb__0 (a) {
    return (a === this.sender);
  }; 

  function $l$gc__DisplayClass60_0_$lmapOnGUIButtonDown$gb__1 (a) {
    return (a === this.sender);
  }; 

  function $l$gc__DisplayClass60_0_$lmapOnGUIButtonDown$gb__2 (a) {
    return (a === this.sender);
  }; 

  JSIL.MakeType({
      BaseType: $asm14.TypeRef("System.Object"), 
      Name: "Fusee.Tutorial.Core.Tutorial+<>c__DisplayClass60_0", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      $l$gc__DisplayClass60_0__ctor
    );

    $.Method({Static:false, Public:false}, "$lmapOnGUIButtonDown$gb__0", 
      new JSIL.MethodSignature($.Boolean, [$asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButton")]), 
      $l$gc__DisplayClass60_0_$lmapOnGUIButtonDown$gb__0
    );

    $.Method({Static:false, Public:false}, "$lmapOnGUIButtonDown$gb__1", 
      new JSIL.MethodSignature($.Boolean, [$asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButton")]), 
      $l$gc__DisplayClass60_0_$lmapOnGUIButtonDown$gb__1
    );

    $.Method({Static:false, Public:false}, "$lmapOnGUIButtonDown$gb__2", 
      new JSIL.MethodSignature($.Boolean, [$asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButton")]), 
      $l$gc__DisplayClass60_0_$lmapOnGUIButtonDown$gb__2
    );

    $.Field({Static:false, Public:true }, "sender", $asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButton"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm14.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class Fusee.Tutorial.Core.Tutorial+<>c__DisplayClass61_0 */ 

(function $l$gc__DisplayClass61_0$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.Fusee.Serialization.SceneNodeContainer)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm14.System.String)) ();
  };


  function $l$gc__DisplayClass61_0__ctor () {
  }; 

  function $l$gc__DisplayClass61_0_$lbuyTower$gb__0 (n) {
    return n.Name == this.$name;
  }; 

  JSIL.MakeType({
      BaseType: $asm14.TypeRef("System.Object"), 
      Name: "Fusee.Tutorial.Core.Tutorial+<>c__DisplayClass61_0", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      $l$gc__DisplayClass61_0__ctor
    );

    $.Method({Static:false, Public:false}, "$lbuyTower$gb__0", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]), 
      $l$gc__DisplayClass61_0_$lbuyTower$gb__0
    );

    $.Field({Static:false, Public:true }, "$name", $.String);


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm14.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class Fusee.Tutorial.Core.Wuggy */ 

(function Wuggy$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.Fusee.Serialization.SceneContainer)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.Fusee.Math.Core.float3)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm14.System.Int32)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm14.System.Predicate$b1.Of($asm07.Fusee.Serialization.SceneNodeContainer))) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm07.Fusee.Serialization.AnimationComponent)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm0B.Fusee.Xene.ContainerExtensions)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm07.Fusee.Serialization.SceneNodeContainer)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm11.System.Linq.Enumerable)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm09.Fusee.Tutorial.Core.Wuggy_$l$gc)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm0B.Fusee.Xene.SceneFinderExtensions)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm14.System.Single)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm07.Fusee.Serialization.AnimationTrackContainer)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm07.Fusee.Serialization.AnimationKeyContainerFloat3)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm14.System.Collections.Generic.List$b1.Of($asm07.Fusee.Serialization.AnimationKeyContainerBase))) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.MethodSignature("!!0", [$asm0D.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"])], ["TSource"]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.MethodSignature($asm14.TypeRef("System.Boolean"), [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.MethodSignature($asm14.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]), [$asm14.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]), $asm14.TypeRef("System.Predicate`1", [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")])]))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("Fusee.Math.Core.float3"), [
        $asm14.TypeRef("System.Single"), $asm14.TypeRef("System.Single"), 
        $asm14.TypeRef("System.Single")
      ]))) ();
  };
  var $S04 = function () {
    return ($S04 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm07.TypeRef("Fusee.Serialization.AnimationKeyContainerBase")]))) ();
  };


  function Wuggy__ctor (_model, _position, _size, _color, _speed, _health, _money) {
    var arg_93_1 = null;
    this.animList = new ($T04())();
    this.model = _model;
    this.position = _position.MemberwiseClone();
    this.size = (_size | 0);
    this.color = _color.MemberwiseClone();
    this.speed = (_speed | 0);
    this.health = (_health | 0);
    this.money = (_money | 0);
    $T05().GetTransform($S00().CallStatic($T07(), "First$b1", [$asm07.Fusee.Serialization.SceneNodeContainer], this.model.Children), 0).Translation = this.position.MemberwiseClone();
    if ((arg_93_1 = $T08().$l$g9__8_0) === null) {
      arg_93_1 = $T08().$l$g9__8_0 = $T03().New($T08().$l$g9, null, new JSIL.MethodPointerInfo($asm09.Fusee.Tutorial.Core.Wuggy_$l$gc, "$l_ctor$gb__8_0", $S01(), false, false));
    }
    $T05().GetMaterial($S00().CallStatic($T07(), "First$b1", [$asm07.Fusee.Serialization.SceneNodeContainer], $S02().CallStatic($T09(), "FindNodes", null, this.model.Children, arg_93_1)), 0).Diffuse.Color = _color.MemberwiseClone();
    var num = +(this.size) * 0.1;
    $T05().GetTransform($S00().CallStatic($T07(), "First$b1", [$asm07.Fusee.Serialization.SceneNodeContainer], this.model.Children), 0).Scale = $S03().Construct(num, num, num);
  }; 

  function Wuggy_get_Model () {
    return this.model;
  }; 

  function Wuggy_set_Model (value) {
    this.model = value;
  }; 

  function Wuggy_SetUpAnimations () {
    var animationTrackContainer = new ($T0B())();
    var animationKeyContainerFloat = new ($T0C())();
    animationKeyContainerFloat.Time = 0;
    animationKeyContainerFloat.Value = $S03().Construct(0, 0, 0);
    $S04().CallVirtual("Add", null, animationTrackContainer.KeyFrames, animationKeyContainerFloat);
  }; 

  JSIL.MakeType({
      BaseType: $asm14.TypeRef("System.Object"), 
      Name: "Fusee.Tutorial.Core.Wuggy", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 7, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("Fusee.Serialization.SceneContainer"), $asm06.TypeRef("Fusee.Math.Core.float3"), 
          $.Int32, $asm06.TypeRef("Fusee.Math.Core.float3"), 
          $.Int32, $.Int32, 
          $.Int32
        ]), 
      Wuggy__ctor
    );

    $.Method({Static:false, Public:true }, "get_Model", 
      JSIL.MethodSignature.Return($asm07.TypeRef("Fusee.Serialization.SceneContainer")), 
      Wuggy_get_Model
    );

    $.Method({Static:false, Public:true }, "set_Model", 
      JSIL.MethodSignature.Action($asm07.TypeRef("Fusee.Serialization.SceneContainer")), 
      Wuggy_set_Model
    );

    $.Method({Static:false, Public:true }, "SetUpAnimations", 
      JSIL.MethodSignature.Void, 
      Wuggy_SetUpAnimations
    );

    $.Field({Static:false, Public:false}, "model", $asm07.TypeRef("Fusee.Serialization.SceneContainer"));

    $.Field({Static:false, Public:false}, "position", $asm06.TypeRef("Fusee.Math.Core.float3"));

    $.Field({Static:false, Public:false}, "speed", $.Int32);

    $.Field({Static:false, Public:false}, "health", $.Int32);

    $.Field({Static:false, Public:false}, "color", $asm06.TypeRef("Fusee.Math.Core.float3"));

    $.Field({Static:false, Public:false}, "size", $.Int32);

    $.Field({Static:false, Public:false}, "money", $.Int32);

    $.Field({Static:false, Public:false}, "animList", $asm07.TypeRef("Fusee.Serialization.AnimationComponent"));

    $.Property({Static:false, Public:true }, "Model", $asm07.TypeRef("Fusee.Serialization.SceneContainer"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Tutorial.Core.Wuggy+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm07.Fusee.Serialization.SceneNodeContainer)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm14.System.String)) ();
  };


  function $l$gc__ctor () {
  }; 

  function $l$gc_$l_ctor$gb__8_0 (n) {
    return n.Name == "Body";
  }; 

  JSIL.MakeType({
      BaseType: $asm14.TypeRef("System.Object"), 
      Name: "Fusee.Tutorial.Core.Wuggy+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      $l$gc__ctor
    );

    $.Method({Static:false, Public:false}, "$l.ctor$gb__8_0", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]), 
      $l$gc_$l_ctor$gb__8_0
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $.Type);

    $.Field({Static:true , Public:true }, "$l$g9__8_0", $asm14.TypeRef("System.Predicate`1", [$asm07.TypeRef("Fusee.Serialization.SceneNodeContainer")]));


    function $l$gc__cctor () {
      $thisType.$l$g9 = new $thisType();
    }; 

    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      $l$gc__cctor
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm14.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

